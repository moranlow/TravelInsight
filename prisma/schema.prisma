// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                 String    @id @default(auto()) @map("_id") @db.ObjectId
  name               String?
  email              String    @unique
  creator            Boolean?
  emailVerified      DateTime?
  image              String?
  hashedPassword     String?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  favoriteIds        String[]  @db.ObjectId
  productIds         String[]  @db.ObjectId
  createdProductsIds String[]  @db.ObjectId

  accounts Account[]
  listings Listing[]
  Guide    TourGuide[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Listing {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  country     String
  state       String
  city        String
  category    String
  imageSrc    String
  title       String
  description String
  price       Int
  highlights  String
  startPoint  String
  information String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  userId      String      @db.ObjectId
  tourGuide   TourGuide[]

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model TourGuide {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  listingId   String   @db.ObjectId
  title       String
  description String
  createdAt   DateTime @default(now())

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  listing Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)
}
